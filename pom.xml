<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example</groupId>
	<artifactId>test-kotlin-maven</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<kotlin.version>1.7.10</kotlin.version>
		<dokka.version>1.7.10</dokka.version>
		<spring.version>[4.2.9, 4.3)</spring.version>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.11.0</version>
				</plugin>
				<plugin>
					<groupId>org.jetbrains.dokka</groupId>
					<artifactId>dokka-maven-plugin</artifactId>
					<version>${dokka.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jetbrains.dokka</groupId>
					<artifactId>kotlin-as-java-plugin</artifactId>
					<version>${dokka.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jetbrains.kotlin</groupId>
										<artifactId>kotlin-maven-plugin</artifactId>
										<versionRange>[1.7.10,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals> <goal>test-compile</goal> </goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/test/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>java-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>java-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M7</version>
				<dependencies>
					<dependency>
						<groupId>me.fabriciorby</groupId>
						<artifactId>maven-surefire-junit5-tree-reporter</artifactId>
						<version>1.1.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<failIfNoTests>true</failIfNoTests>
					<rerunFailingTestsCount>0</rerunFailingTestsCount>
					<includes>
						<include>**/*.java</include>
					</includes>
					<excludes>
						<exclude>**/*IntegrationTest.*</exclude>
					</excludes>
					<statelessTestsetReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
						<!-- Prefer @DisplayName & friends, if any. -->
						<usePhrasedFileName>true</usePhrasedFileName>
						<usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
						<usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
						<usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
					</statelessTestsetReporter>
					<!-- For the console output, use the tree reporter from
						 https://github.com/fabriciorby/maven-surefire-junit5-tree-reporter. -->
					<reportFormat>plain</reportFormat>
					<consoleOutputReporter>
						<disable>true</disable>
					</consoleOutputReporter>
					<statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
						<!-- Prefer @DisplayName & friends, if any. -->
						<usePhrasedFileName>true</usePhrasedFileName>
						<usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
						<!-- Avoid null's in *.txt summary -->
						<usePhrasedClassNameInTestCaseSummary>false</usePhrasedClassNameInTestCaseSummary>
					</statelessTestsetInfoReporter>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M7</version>
				<configuration>
					<failIfNoTests>true</failIfNoTests>
					<rerunFailingTestsCount>0</rerunFailingTestsCount>
					<includes>
						<include>**/*IntegrationTest.*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>default-merge</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>jacoco.exec</include>
										<include>jacoco-it.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-merged.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>default-report-merged</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
							<dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jetbrains.dokka</groupId>
				<artifactId>dokka-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>package-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>javadocJar</goal>
						</goals>
					</execution>
					<execution>
						<id>publish-javadocs</id>
						<phase>pre-site</phase>
						<goals>
							<goal>javadoc</goal>
						</goals>
						<configuration>
							<outputDir>${project.reporting.outputDirectory}/apidocs</outputDir>
						</configuration>
					</execution>
					<execution>
						<id>publish-dokka</id>
						<phase>pre-site</phase>
						<goals>
							<goal>dokka</goal>
						</goals>
						<configuration>
							<outputDir>${project.reporting.outputDirectory}/dokka</outputDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>[4.13.2,)</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.tempus-fugit</groupId>
			<artifactId>tempus-fugit</artifactId>
			<version>1.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>javadoc</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.jetbrains.dokka</groupId>
						<artifactId>dokka-maven-plugin</artifactId>
						<configuration>
							<sourceDirectories>
								<dir>${project.basedir}/src/main/kotlin</dir>
								<dir>${project.basedir}/src/test/kotlin</dir>
							</sourceDirectories>
							<dokkaPlugins>
								<plugin>
									<groupId>org.jetbrains.dokka</groupId>
									<artifactId>kotlin-as-java-plugin</artifactId>
								</plugin>
							</dokkaPlugins>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<reporting>
				<plugins>
					<plugin>
						<groupId>org.jetbrains.dokka</groupId>
						<artifactId>dokka-maven-plugin</artifactId>
						<configuration>
							<sourceDirectories>
								<dir>${project.basedir}/src/main/kotlin</dir>
								<dir>${project.basedir}/src/test/kotlin</dir>
							</sourceDirectories>
							<dokkaPlugins>
								<plugin>
									<groupId>org.jetbrains.dokka</groupId>
									<artifactId>kotlin-as-java-plugin</artifactId>
								</plugin>
							</dokkaPlugins>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jetbrains.dokka</groupId>
				<artifactId>dokka-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>
</project>
