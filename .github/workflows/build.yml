name: Maven Build

on:
  pull_request:
  push:

jobs:
  build:
    name: Maven Build
    runs-on: ${{ matrix.os }}

    # `continue-on-error` applies to a single job. If `true`, other jobs in the matrix will continue running even if the job with `continue-on-error: true` fails.
    continue-on-error: true

    strategy:
      # If `fail-fast` is set to `true`, GitHub will cancel all in-progress and queued jobs in the matrix if any job in the matrix fails.
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8
          cache: 'maven'

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: mvn test (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          mvn -B -T1C --fail-at-end clean test
        shell: bash

      - name: mvn test (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          mvn -B -T1C --fail-at-end clean test
        shell: cmd

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: xml-test-reports-${{ runner.os }}
          path: |
            **/target/*-reports/TEST-*.xml
            **/build/test-results/*/TEST-*.xml

      - name: JUnit Tests (dorny/test-reporter@v1, ${{ runner.os }})
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: JUnit Tests (dorny/test-reporter@v1, ${{ runner.os }})
          # Comma-separated values.
          path: "**/target/*-reports/TEST-*.xml, **/build/test-results/*/TEST-*.xml"
          reporter: java-junit


  report-linux:
    name: Publish JUnit test results (Linux)
    if: ${{ always() }}
    needs: build
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write

    steps:
      - uses: actions/download-artifact@v3
        if: ${{ always() }}
        with:
          name: xml-test-reports-${{ runner.os }}

        # Uses Docker, that's why Linux-only.
      - name: Unit Test Results (EnricoMi/publish-unit-test-result-action, Linux)
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ runner.os == 'Linux' }}
        with:
          files: "**/target/*-reports/TEST-*.xml"


  report-windows:
    name: Publish JUnit test results (Windows)
    if: ${{ always() }}
    needs: build
    runs-on: windows-latest

    permissions:
      checks: write
      pull-requests: write

    steps:
      - uses: actions/download-artifact@v3
        if: ${{ always() }}
        with:
          name: xml-test-reports-${{ runner.os }}

      - name: Unit Test Results (EnricoMi/publish-unit-test-result-action, Windows)
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: ${{ runner.os == 'Windows' }}
        with:
          files: "**/target/*-reports/TEST-*.xml"
